{"numFailedTestSuites":1,"numFailedTests":0,"numPassedTestSuites":0,"numPassedTests":0,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":1,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":0,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1649275386301,"success":false,"testResults":[{"assertionResults":[],"coverage":{},"endTime":1649275386407,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[96msrc/Cells/LogCell.test.tsx\u001b[0m:\u001b[93m11\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType '{ label: string; time: string; date: string; log: string; isUpload: boolean; }' is not assignable to type 'LogCellProps'.\n      Object literal may only specify known properties, and 'isUpload' does not exist in type 'LogCellProps'.\n\n    \u001b[7m11\u001b[0m   isUpload: true,\n    \u001b[7m  \u001b[0m \u001b[91m  ~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/Cells/LogCell.test.tsx\u001b[0m:\u001b[93m34\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType '{ isUpload: boolean; className?: string | undefined; style?: CSSProperties | undefined; label: string; time: string; date: string; log: string; isIncoming: boolean; onSelect?: (() => void) | undefined; }' is not assignable to type 'IntrinsicAttributes & LogCellProps & { children?: ReactNode; }'.\n      Property 'isUpload' does not exist on type 'IntrinsicAttributes & LogCellProps & { children?: ReactNode; }'.\n\n    \u001b[7m34\u001b[0m   render(<LogCell {...props} isUpload={false} />)\n    \u001b[7m  \u001b[0m \u001b[91m                             ~~~~~~~~\u001b[0m\n","name":"/Users/lyonsreign/Desktop/LogCell/mbari/packages/react-ui/src/Cells/LogCell.test.tsx","startTime":1649275386407,"status":"failed","summary":""}],"wasInterrupted":false}